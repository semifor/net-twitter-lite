name             = Net-Twitter-Lite
main_module      = lib/Net/Twitter/Lite.pm
abstract         = A perl API library for the Twitter API
author           = Marc Mims <marc@questright.com>
license          = Perl_5
copyright_holder = Marc Mims
copyright_year   = 2013-2016


; Make the git repo installable
[Git::GatherDir]
exclude_filename = Build.PL
exclude_filename = META.json
exclude_filename = LICENSE
exclude_filename = README.md

[CopyFilesFromBuild]
copy = META.json
copy = LICENSE
copy = Build.PL

[VersionFromModule]
[ReversionOnRelease]
prompt = 1

; after ReversionOnRelease for munge_files, before Git::Commit for after_release
[NextRelease]
format = %-7v  %{yyyy-MM-dd HH:mm:ss VVV}d%{ (TRIAL RELEASE)}T

[Git::Check]
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = META.json
allow_dirty = README.md
allow_dirty = Build.PL
; for $VERSION
allow_dirty = lib/Net/Twitter/Lite.pm

[GithubMeta]
issues = 1

[MetaResources]
x_IRC      = irc://irc.perl.org#net-twitter

[MetaNoIndex]
directory = src
directory = t
directory = xt
directory = inc
directory = share
directory = eg
directory = examples

[PkgVersion]
[PodVersion]

[AutoPrereqs]

[Prereqs]
JSON                 = 2.02
URI                  = 1.40
LWP::UserAgent       = 2.032
LWP::Protocol::https = 0
Net::HTTP            = >= 0,!= 6.04,!= 6.05
parent               = 0

[Prereqs / Recommends]
Net::OAuth = 0.25
Net::Netrc = 0

[Prereqs / TestRequires]
Test::Simple = 0.98
Test::Fatal = 0

[ModuleBuildTiny]
[MetaJSON]

; x_contributors for MetaCPAN
[Git::Contributors]

; standard stuff
[PodSyntaxTests]
[MetaYAML]
[License]
[ReadmeAnyFromPod]
[ReadmeAnyFromPod/ReadmeTextInBuild]
[ExtraTests]
[ExecDir]
dir = script

[ShareDir]
[Manifest]
[ManifestSkip]

[CheckChangesHasContent]
[TestRelease]
[Test::Compile]
[PodCoverageTests]
; authordep Pod::Coverage::TrustPod
[ConfirmRelease]
[UploadToCPAN]

[Git::Commit]
commit_msg  = Release %v
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = META.json
allow_dirty = Build.PL
; for $VERSION
allow_dirty = lib/Net/Twitter/Lite.pm

; .pm files copied back from Release
;allow_dirty_match = \.pm$ ; .pm files copied back from Release

[Git::Tag]
tag_format  = %v
tag_message =

[Git::Push]
